{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahye\\\\gitProjects\\\\FE\\\\bmb-fe\\\\src\\\\components\\\\pages\\\\home\\\\HomeBookmarkList.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeBookmarkList = ({\n  items\n}) => {\n  const moveUrl = url => {\n    window.open(url, '_blank');\n  };\n\n  // 날짜 계산 함수\n  const getTimeGap = a => {\n    // 타임스탬프를 날짜 객체로 변환\n    const date = new Date(parseInt(a));\n    const now = new Date();\n    const timeDifference = now - date;\n    const minuteDifference = Math.floor(timeDifference / (1000 * 60));\n    const hourDifference = Math.floor(timeDifference / (1000 * 60 * 60));\n    const dayDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n    if (minuteDifference < 1) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBC29\\uAE08 \\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else if (minuteDifference < 60) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [minuteDifference, \"\\uBD84 \\uC804\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    } else if (hourDifference < 24) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [hourDifference, \"\\uC2DC\\uAC04 \\uC804\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    } else if (dayDifference < 7) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [dayDifference, \"\\uC77C \\uC804\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    } else {\n      // 형식화된 날짜 문자열 사용\n      const formattedDate = `${date.getFullYear()}년 ${date.getMonth() + 1}월 ${date.getDate()}일`;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: items && items.length > 0 && items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-item\",\n        onClick: () => moveUrl(item.url),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/images/img_example_thumbnail.png\",\n          className: \"list-thumbnail\",\n          alt: `Image ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-name\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-date\",\n            children: getTimeGap(item.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = HomeBookmarkList;\nexport default HomeBookmarkList;\nconst Wrapper = styled.div`\npadding-left: 170px;\npadding-right: 170px;\n\n.list-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n.list-item {\n  position: relative; /* 아이템 이름과 개수의 상대적인 위치 */\n  width: calc(33% - 16px); /* 3개의 아이템을 가로로 정렬하고 간격을 조절 */\n  height: 329px; \n  margin: 8px;\n  border-radius: 10px;\n  border: 1px solid #DDDDDD;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  cursor: pointer;\n}\n.list-thumbnail {\n  width:100%;\n  height: 100%;\n  object-fit: cover;\n  overflow: hidden;\n}\n.item-info {\n  position: absolute; \n  bottom: 0%;\n  height: 68px;\n  width: 100%;\n  background: #fff;\n  padding: 12px;\n  z-index: 1; /* 드롭다운 메뉴보다 위에 표시 */\n}\n.item-name{\n  color: #343A40;\n  font-size: 16px;\n  font-family: 'Pret-Bold';\n  font-weight: 700;\n  line-height: 24px;\n  word-wrap: break-word;\n  margin-left: 24px;\n}\n.item-date{\n  color: #6C757D;\n  font-size: 14px;\n  font-family: 'Pret-reg';\n  font-weight: 400;\n  line-height: 20px;\n  word-wrap: break-word;\n  margin-left: 24px\n}\n`;\n_c2 = Wrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"HomeBookmarkList\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["React","useEffect","useState","styled","jsxDEV","_jsxDEV","HomeBookmarkList","items","moveUrl","url","window","open","getTimeGap","a","date","Date","parseInt","now","timeDifference","minuteDifference","Math","floor","hourDifference","dayDifference","children","fileName","_jsxFileName","lineNumber","columnNumber","formattedDate","getFullYear","getMonth","getDate","Wrapper","className","length","map","item","index","onClick","src","alt","title","createdAt","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/dahye/gitProjects/FE/bmb-fe/src/components/pages/home/HomeBookmarkList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst HomeBookmarkList = ({ items }) => {\r\n\r\n  const moveUrl = (url) => {\r\n    window.open(url, '_blank'); \r\n  }\r\n\r\n  // 날짜 계산 함수\r\n  const getTimeGap = (a) => {\r\n\r\n    // 타임스탬프를 날짜 객체로 변환\r\n    const date = new Date(parseInt(a));\r\n\r\n    const now = new Date();\r\n    const timeDifference = now - date;\r\n    const minuteDifference = Math.floor(timeDifference / (1000 * 60));\r\n    const hourDifference = Math.floor(timeDifference / (1000 * 60 * 60));\r\n    const dayDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n  \r\n    if (minuteDifference < 1) {\r\n      return <p>방금 전</p>;\r\n    } else if (minuteDifference < 60) {\r\n      return <p>{minuteDifference}분 전</p>;\r\n    } else if (hourDifference < 24) {\r\n      return <p>{hourDifference}시간 전</p>;\r\n    } else if (dayDifference < 7) {\r\n      return <p>{dayDifference}일 전</p>;\r\n    } else {\r\n      // 형식화된 날짜 문자열 사용\r\n      const formattedDate = `${date.getFullYear()}년 ${date.getMonth() + 1}월 ${date.getDate()}일`;\r\n      return <p>{formattedDate}</p>;\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"list-container\">\r\n      {items && items.length > 0 && items.map((item, index) => (\r\n          <div key={index} className=\"list-item\" onClick={() => moveUrl(item.url)}>\r\n            <img \r\n              src=\"/assets/images/img_example_thumbnail.png\" \r\n              className='list-thumbnail'\r\n              alt={`Image ${index}`} \r\n            />\r\n            <div className=\"item-info\">\r\n              <div className=\"item-name\">{item.title}</div>\r\n              <div className=\"item-date\">{getTimeGap(item.createdAt)}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Wrapper>\r\n    );\r\n};\r\n\r\nexport default HomeBookmarkList;\r\n\r\nconst Wrapper = styled.div`\r\npadding-left: 170px;\r\npadding-right: 170px;\r\n\r\n.list-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.list-item {\r\n  position: relative; /* 아이템 이름과 개수의 상대적인 위치 */\r\n  width: calc(33% - 16px); /* 3개의 아이템을 가로로 정렬하고 간격을 조절 */\r\n  height: 329px; \r\n  margin: 8px;\r\n  border-radius: 10px;\r\n  border: 1px solid #DDDDDD;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n}\r\n.list-thumbnail {\r\n  width:100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  overflow: hidden;\r\n}\r\n.item-info {\r\n  position: absolute; \r\n  bottom: 0%;\r\n  height: 68px;\r\n  width: 100%;\r\n  background: #fff;\r\n  padding: 12px;\r\n  z-index: 1; /* 드롭다운 메뉴보다 위에 표시 */\r\n}\r\n.item-name{\r\n  color: #343A40;\r\n  font-size: 16px;\r\n  font-family: 'Pret-Bold';\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n  word-wrap: break-word;\r\n  margin-left: 24px;\r\n}\r\n.item-date{\r\n  color: #6C757D;\r\n  font-size: 14px;\r\n  font-family: 'Pret-reg';\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n  word-wrap: break-word;\r\n  margin-left: 24px\r\n}\r\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}