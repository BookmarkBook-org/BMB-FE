{"ast":null,"code":"import isUrl from 'is-url';\nimport articleTitle from 'article-title';\nimport axios from 'axios';\nfunction requestResponseHandler(error, response, body) {\n  let title;\n  if (!error && response.status === 200) {\n    if (!body) {\n      return {\n        error: 'No body returned from url'\n      };\n    }\n    title = articleTitle(body);\n  } else if (!error && response.status === 404) {\n    error = '404';\n  } else {\n    error = 'Unexpected response';\n  }\n  return {\n    title,\n    error,\n    response,\n    body\n  };\n}\n\n/**\r\n * Retrieves the title at url and uses the callback to return that title\r\n * @name getTitleAtUrl\r\n * @param {String} url - A url to a webpage to retrieve a title from.\r\n * title has been retrieved.  Invoked with (title, responseError)\r\n */\nexport default async function getTitleAtUrl(url) {\n  if (!isUrl(url)) {\n    throw new Error('Invalid url');\n  }\n  try {\n    const result = await axios.get(url);\n    return requestResponseHandler(result.error, result, result.data);\n  } catch (error) {\n    return {\n      error\n    };\n  }\n}","map":{"version":3,"names":["isUrl","articleTitle","axios","requestResponseHandler","error","response","body","title","status","getTitleAtUrl","url","Error","result","get","data"],"sources":["C:/Users/dahye/gitProjects/FE/bmb-fe/node_modules/get-title-at-url/index.js"],"sourcesContent":["import isUrl from 'is-url';\r\nimport articleTitle from 'article-title';\r\nimport axios from 'axios';\r\n\r\nfunction requestResponseHandler(error, response, body) {\r\n  let title;\r\n\r\n  if (!error && response.status === 200) {\r\n    if (!body) {\r\n      return {error: 'No body returned from url'};\r\n    }\r\n\r\n    title = articleTitle(body);\r\n  } else if (!error && response.status === 404) {\r\n    error = '404';\r\n  } else {\r\n    error = 'Unexpected response';\r\n  }\r\n\r\n  return {title, error, response, body};\r\n}\r\n\r\n/**\r\n * Retrieves the title at url and uses the callback to return that title\r\n * @name getTitleAtUrl\r\n * @param {String} url - A url to a webpage to retrieve a title from.\r\n * title has been retrieved.  Invoked with (title, responseError)\r\n */\r\nexport default async function getTitleAtUrl(url) {\r\n  if (!isUrl(url)) {\r\n    throw new Error('Invalid url');\r\n  }\r\n\r\n  try {\r\n    const result = await axios.get(url);\r\n\r\n    return requestResponseHandler(result.error, result, result.data);\r\n  } catch (error) {\r\n    return {error};\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,QAAQ;AAC1B,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,sBAAsBA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;EACrD,IAAIC,KAAK;EAET,IAAI,CAACH,KAAK,IAAIC,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACrC,IAAI,CAACF,IAAI,EAAE;MACT,OAAO;QAACF,KAAK,EAAE;MAA2B,CAAC;IAC7C;IAEAG,KAAK,GAAGN,YAAY,CAACK,IAAI,CAAC;EAC5B,CAAC,MAAM,IAAI,CAACF,KAAK,IAAIC,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IAC5CJ,KAAK,GAAG,KAAK;EACf,CAAC,MAAM;IACLA,KAAK,GAAG,qBAAqB;EAC/B;EAEA,OAAO;IAACG,KAAK;IAAEH,KAAK;IAAEC,QAAQ;IAAEC;EAAI,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAeG,aAAaA,CAACC,GAAG,EAAE;EAC/C,IAAI,CAACV,KAAK,CAACU,GAAG,CAAC,EAAE;IACf,MAAM,IAAIC,KAAK,CAAC,aAAa,CAAC;EAChC;EAEA,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACH,GAAG,CAAC;IAEnC,OAAOP,sBAAsB,CAACS,MAAM,CAACR,KAAK,EAAEQ,MAAM,EAAEA,MAAM,CAACE,IAAI,CAAC;EAClE,CAAC,CAAC,OAAOV,KAAK,EAAE;IACd,OAAO;MAACA;IAAK,CAAC;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}