{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahye\\\\gitProjects\\\\FE\\\\bmb-fe\\\\src\\\\components\\\\pages\\\\login\\\\LoginGoogle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\nimport styled from \"styled-components\";\nimport LoginBookmark from \"./LoginBookmark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginGoogle = () => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false); // 로그인 상태를 관리하는 상태\n\n  // onSuccess 이벤트 핸들러\n  const handleSuccess = res => {\n    console.log(res);\n    setLoggedIn(true); // 로그인 상태를 true로 변경\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(LoginBookmark, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) // 로그인되면 다른 컴포넌트로 바뀜\n    : /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: process.env.REACT_APP_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleSuccess,\n        onFailure: err => {\n          console.log(err);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginGoogle, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = LoginGoogle;\nexport default LoginGoogle;\nconst Wrapper = styled.div`\n  padding-left: 170px;\n  padding-right: 170px;\n  .title {\n    color: #212529;\n    font-size: 32px;\n    font-family: Pretendard Variable;\n    font-weight: 700;\n    line-height: 46px;\n    word-wrap: break-word;\n  }\n`;\n_c2 = Wrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginGoogle\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["React","useState","GoogleLogin","GoogleOAuthProvider","styled","LoginBookmark","jsxDEV","_jsxDEV","LoginGoogle","_s","loggedIn","setLoggedIn","handleSuccess","res","console","log","Wrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","clientId","process","env","REACT_APP_API_KEY","onSuccess","onFailure","err","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/dahye/gitProjects/FE/bmb-fe/src/components/pages/login/LoginGoogle.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\r\nimport styled from \"styled-components\";\r\nimport LoginBookmark from \"./LoginBookmark\";\r\n\r\nconst LoginGoogle = () => {\r\n  const [loggedIn, setLoggedIn] = useState(false); // 로그인 상태를 관리하는 상태\r\n\r\n  // onSuccess 이벤트 핸들러\r\n  const handleSuccess = (res) => {\r\n    console.log(res);\r\n    setLoggedIn(true); // 로그인 상태를 true로 변경\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {loggedIn ? (\r\n        <LoginBookmark /> // 로그인되면 다른 컴포넌트로 바뀜\r\n      ) : (\r\n        <GoogleOAuthProvider clientId={process.env.REACT_APP_API_KEY}>\r\n          <GoogleLogin\r\n            onSuccess={handleSuccess}\r\n            onFailure={(err) => {\r\n              console.log(err);\r\n            }}\r\n          />\r\n        </GoogleOAuthProvider>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LoginGoogle;\r\n\r\nconst Wrapper = styled.div`\r\n  padding-left: 170px;\r\n  padding-right: 170px;\r\n  .title {\r\n    color: #212529;\r\n    font-size: 32px;\r\n    font-family: Pretendard Variable;\r\n    font-weight: 700;\r\n    line-height: 46px;\r\n    word-wrap: break-word;\r\n  }\r\n`;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMW,aAAa,GAAIC,GAAG,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBF,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;EACrB,CAAC;;EAED,oBACEJ,OAAA,CAACS,OAAO;IAAAC,QAAA,EACLP,QAAQ,gBACPH,OAAA,CAACF,aAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,eAElBd,OAAA,CAACJ,mBAAmB;MAACmB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB;MAAAR,QAAA,eAC3DV,OAAA,CAACL,WAAW;QACVwB,SAAS,EAAEd,aAAc;QACzBe,SAAS,EAAGC,GAAG,IAAK;UAClBd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;QAClB;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAACZ,EAAA,CAzBID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA2BjB,eAAeA,WAAW;AAE1B,MAAMQ,OAAO,GAAGZ,MAAM,CAAC0B,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIf,OAAO;AAAA,IAAAa,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}