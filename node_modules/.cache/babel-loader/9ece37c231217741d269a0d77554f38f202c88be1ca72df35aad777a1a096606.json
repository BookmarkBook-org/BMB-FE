{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahye\\\\gitProjects\\\\FE\\\\bmb-fe\\\\src\\\\components\\\\pages\\\\login\\\\LoginGoogle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\nimport styled from \"styled-components\";\nimport Cookies from \"js-cookie\";\nimport LoginBookmark from \"./LoginBookmark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginGoogle = () => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    // 페이지 로딩 시 쿠키에서 로그인 상태 확인\n    const isLoggedIn = Cookies.get(\"loggedIn\");\n    if (isLoggedIn === \"true\") {\n      setLoggedIn(true);\n    }\n  }, []);\n  const handleSuccess = res => {\n    console.log(res);\n\n    // 로그인 성공 시 쿠키에 로그인 상태 저장\n    Cookies.set(\"loggedIn\", \"true\");\n    setLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(LoginBookmark, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: process.env.REACT_APP_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleSuccess,\n        onFailure: err => {\n          console.log(err);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginGoogle, \"8ySMdZGY74HFzvXtK44+NjqgpXQ=\");\n_c = LoginGoogle;\nexport default LoginGoogle;\nconst Wrapper = styled.div`\n  max-width: 375px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .title {\n    color: #212529;\n    font-size: 32px;\n    font-family: Pretendard Variable;\n    font-weight: 700;\n    line-height: 46px;\n    word-wrap: break-word;\n  }\n`;\n_c2 = Wrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginGoogle\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["React","useState","useEffect","GoogleLogin","GoogleOAuthProvider","styled","Cookies","LoginBookmark","jsxDEV","_jsxDEV","LoginGoogle","_s","loggedIn","setLoggedIn","isLoggedIn","get","handleSuccess","res","console","log","set","Wrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","clientId","process","env","REACT_APP_API_KEY","onSuccess","onFailure","err","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/dahye/gitProjects/FE/bmb-fe/src/components/pages/login/LoginGoogle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\r\nimport styled from \"styled-components\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginBookmark from \"./LoginBookmark\";\r\n\r\nconst LoginGoogle = () => {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // 페이지 로딩 시 쿠키에서 로그인 상태 확인\r\n    const isLoggedIn = Cookies.get(\"loggedIn\");\r\n    if (isLoggedIn === \"true\") {\r\n      setLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleSuccess = (res) => {\r\n    console.log(res);\r\n    \r\n    // 로그인 성공 시 쿠키에 로그인 상태 저장\r\n    Cookies.set(\"loggedIn\", \"true\");\r\n    setLoggedIn(true);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {loggedIn ? (\r\n        <LoginBookmark />\r\n      ) : (\r\n        <GoogleOAuthProvider clientId={process.env.REACT_APP_API_KEY}>\r\n          <GoogleLogin\r\n            onSuccess={handleSuccess}\r\n            onFailure={(err) => {\r\n              console.log(err);\r\n            }}\r\n          />\r\n        </GoogleOAuthProvider>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LoginGoogle;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 375px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .title {\r\n    color: #212529;\r\n    font-size: 32px;\r\n    font-family: Pretendard Variable;\r\n    font-weight: 700;\r\n    line-height: 46px;\r\n    word-wrap: break-word;\r\n  }\r\n`;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,UAAU,GAAGR,OAAO,CAACS,GAAG,CAAC,UAAU,CAAC;IAC1C,IAAID,UAAU,KAAK,MAAM,EAAE;MACzBD,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAIC,GAAG,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;;IAEhB;IACAX,OAAO,CAACc,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;IAC/BP,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEJ,OAAA,CAACY,OAAO;IAAAC,QAAA,EACLV,QAAQ,gBACPH,OAAA,CAACF,aAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEjBjB,OAAA,CAACL,mBAAmB;MAACuB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB;MAAAR,QAAA,eAC3Db,OAAA,CAACN,WAAW;QACV4B,SAAS,EAAEf,aAAc;QACzBgB,SAAS,EAAGC,GAAG,IAAK;UAClBf,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;QAClB;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAACf,EAAA,CAnCID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAqCjB,eAAeA,WAAW;AAE1B,MAAMW,OAAO,GAAGhB,MAAM,CAAC8B,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIf,OAAO;AAAA,IAAAa,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}