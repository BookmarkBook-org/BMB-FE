{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahye\\\\gitProjects\\\\FE\\\\bmb-fe\\\\src\\\\components\\\\pages\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Outlet, useHistory } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [isBlocking, setIsBlocking] = useState(false);\n  const history = useHistory(); // Get the history object\n  useEffect(() => {\n    setTitle(\"로그인\");\n    const unblock = history.block((loc, action) => {\n      if (action === 'POP' && isBlocking) {\n        return window.confirm('뒤로 가겠습니까');\n      }\n      return true;\n    });\n    return () => unblock();\n  }, [isBlocking]);\n  useEffect(() => {\n    // Set isBlocking based on your logic\n    // For example, you can set it to true when there are unsaved changes\n    // info&&setIsBlocking(true)\n  }, [isBlocking]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n        context: [title, setTitle]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"gb3T8FvzI/4j8F/yXE+zlUjMMkU=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nconst Wrapper = styled.div`\n.title {\n    color: #212529;\n    font-size: 32px;\n    font-family: 'Pret-Bold';\n    font-weight: 700;\n    line-height: 40px;\n    word-wrap: break-word;\n    padding-left: 170px;\n    padding-right: 170px; \n  }\n  .progress-bar {\n    width: 100%; \n    background: #ddd; \n  }\n  .hr {\n    text-align: left;\n    margin-left: 0;\n    height: 4px; \n    background: linear-gradient(to right, #7749F8 0%, #7749F8 50%);\n    transition: width 0.5s; \n  }\n`;\n_c2 = Wrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","useHistory","styled","jsxDEV","_jsxDEV","Login","_s","title","setTitle","isBlocking","setIsBlocking","history","unblock","block","loc","action","window","confirm","Wrapper","children","className","fileName","_jsxFileName","lineNumber","columnNumber","context","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/dahye/gitProjects/FE/bmb-fe/src/components/pages/login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Outlet, useHistory } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst Login = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    const [isBlocking, setIsBlocking] = useState(false);\r\n    const history = useHistory(); // Get the history object\r\n    useEffect(() => {\r\n      setTitle(\"로그인\");\r\n      const unblock = history.block((loc, action) => {\r\n        if(action === 'POP' && isBlocking){\r\n          return window.confirm('뒤로 가겠습니까');\r\n        }\r\n        return true;\r\n      })\r\n      return () => unblock()\r\n    }, [isBlocking]);\r\n    useEffect(() => {\r\n      // Set isBlocking based on your logic\r\n      // For example, you can set it to true when there are unsaved changes\r\n      // info&&setIsBlocking(true)\r\n  }, [isBlocking]);\r\n    return (\r\n        <Wrapper>\r\n            <div>\r\n            <p className=\"title\">{title}</p>\r\n              <Outlet context={[title, setTitle]} />\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst Wrapper = styled.div`\r\n.title {\r\n    color: #212529;\r\n    font-size: 32px;\r\n    font-family: 'Pret-Bold';\r\n    font-weight: 700;\r\n    line-height: 40px;\r\n    word-wrap: break-word;\r\n    padding-left: 170px;\r\n    padding-right: 170px; \r\n  }\r\n  .progress-bar {\r\n    width: 100%; \r\n    background: #ddd; \r\n  }\r\n  .hr {\r\n    text-align: left;\r\n    margin-left: 0;\r\n    height: 4px; \r\n    background: linear-gradient(to right, #7749F8 0%, #7749F8 50%);\r\n    transition: width 0.5s; \r\n  }\r\n`"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,UAAU,QAAQ,kBAAkB;AACrD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMa,OAAO,GAAGV,UAAU,CAAC,CAAC,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAM;IACdS,QAAQ,CAAC,KAAK,CAAC;IACf,MAAMI,OAAO,GAAGD,OAAO,CAACE,KAAK,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;MAC7C,IAAGA,MAAM,KAAK,KAAK,IAAIN,UAAU,EAAC;QAChC,OAAOO,MAAM,CAACC,OAAO,CAAC,UAAU,CAAC;MACnC;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IACF,OAAO,MAAML,OAAO,CAAC,CAAC;EACxB,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAChBV,SAAS,CAAC,MAAM;IACd;IACA;IACA;EAAA,CACH,EAAE,CAACU,UAAU,CAAC,CAAC;EACd,oBACIL,OAAA,CAACc,OAAO;IAAAC,QAAA,eACJf,OAAA;MAAAe,QAAA,gBACAf,OAAA;QAAGgB,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAEZ;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BpB,OAAA,CAACJ,MAAM;QAACyB,OAAO,EAAE,CAAClB,KAAK,EAAEC,QAAQ;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAAClB,EAAA,CA5BID,KAAK;EAAA,QAISJ,UAAU;AAAA;AAAAyB,EAAA,GAJxBrB,KAAK;AA8BX,eAAeA,KAAK;AAEpB,MAAMa,OAAO,GAAGhB,MAAM,CAACyB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GAtBKV,OAAO;AAAA,IAAAQ,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}